// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/database": {
            "get": {
                "description": "Return a list of random data from a database. Random data is a GUID and a timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Get random data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.randomData"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts new records into the database",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Post random data",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "name": "number_of_inserts",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all the random test data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Delete random data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/database/count": {
            "get": {
                "description": "Return a count of rows in the random data table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Get random data count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Counter"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "Return a list of files from the filesystem with name, size, modification date and file type information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Get files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/filesystem.metadata"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new files on the filesystem",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Post files",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 5,
                        "name": "number_of_files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10485760,
                        "name": "size_in_bytes",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/filesystem.metadata"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the test files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Delete files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/files/count": {
            "get": {
                "description": "Return a count of the number of files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Get files count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Counter"
                        }
                    }
                }
            }
        },
        "/setup": {
            "post": {
                "description": "Create a table in the database and a directory on the filesystem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persistent"
                ],
                "summary": "Setup filesystem and database",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Counter": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "database.randomData": {
            "type": "object",
            "properties": {
                "last_modified": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "filesystem.metadata": {
            "type": "object",
            "properties": {
                "elapsed_in_seconds": {
                    "type": "number"
                },
                "filename": {
                    "type": "string"
                },
                "last_modified": {
                    "type": "string"
                },
                "size_in_bytes": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
